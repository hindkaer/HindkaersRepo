--
-- Target: Microsoft SQL Server 
-- Syntax: isql /Uuser /Ppassword /Sserver -i\path\filename.sql
-- Date  : Sep 27 2018 15:08
-- Script Generated by Database Design Studio 2.21.3 
--


--
-- Select Database: 'db_name'
--
USE Personkartotek
GO
 
IF DB_NAME() = 'Personkartotek'
    RAISERROR('''Personkartotek'' DATABASE CONTEXT NOW IN USE.',1,1)
ELSE
    RAISERROR('ERROR IN BATCH FILE, ''USE Personkartotek'' FAILED!  KILLING THE SPID NOW.',22,127) WITH LOG
 
GO
EXECUTE SP_DBOPTION 'db_name' ,'TRUNC. LOG ON CHKPT.' ,'TRUE'
GO

--
-- Create Table    : 'Adresse'   
-- Husnummer       :  
-- Vejnavn         :  
-- Postnummer      :  
-- Bynavn          :  
-- AdresseID       :  
--
CREATE TABLE Adresse (
    Husnummer      NVARCHAR(300) NOT NULL,
    Vejnavn        NVARCHAR(300) NOT NULL,
    Postnummer     NVARCHAR(300) NOT NULL,
    Bynavn         NVARCHAR(300) NOT NULL,
    AdresseID      BIGINT IDENTITY(1,1) NOT NULL,
CONSTRAINT pk_Adresse PRIMARY KEY CLUSTERED (AdresseID))
GO

--
-- Create Table    : 'Person'   
-- Fornavn         :  
-- Mellemnavn      :  
-- Efternavn       :  
-- Persontype      :  
-- PersonID        :  
-- AdresseID       :  (references Adresse.AdresseID)
--
CREATE TABLE Person (
    Fornavn        NVARCHAR(300) NOT NULL,
    Mellemnavn     NVARCHAR(300) NOT NULL,
    Efternavn      NVARCHAR(300) NOT NULL,
    Persontype     NVARCHAR(300) NOT NULL,
    PersonID       BIGINT IDENTITY(1,1) NOT NULL,
    AdresseID      BIGINT NOT NULL,
CONSTRAINT pk_Person PRIMARY KEY CLUSTERED (PersonID),
CONSTRAINT fk_Person FOREIGN KEY (AdresseID)
    REFERENCES Adresse (AdresseID)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
GO

--
-- Create Table    : 'Telefon'   
-- TelefonID       :  
-- Telefonnummer   :  
-- Telefonselskab  :  
-- PersonID        :  (references Person.PersonID)
--
CREATE TABLE Telefon (
    TelefonID      BIGINT IDENTITY(1,1) NOT NULL,
    Telefonnummer  NVARCHAR(300) NOT NULL,
    Telefonselskab NVARCHAR(300) NOT NULL,
    PersonID       BIGINT NOT NULL,
CONSTRAINT pk_Telefon PRIMARY KEY CLUSTERED (TelefonID),
CONSTRAINT fk_Telefon FOREIGN KEY (PersonID)
    REFERENCES Person (PersonID)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
GO

--
-- Create Table    : 'Alternativadresse'   
-- PersonID        :  (references Person.PersonID)
-- AdresseID       :  (references Adresse.AdresseID)
-- Type            :  
--
CREATE TABLE Alternativadresse (
    PersonID       BIGINT NOT NULL,
    AdresseID      BIGINT NOT NULL,
    Type           NVARCHAR(300) NOT NULL,
CONSTRAINT pk_Alternativadresse PRIMARY KEY CLUSTERED (PersonID,AdresseID),
CONSTRAINT fk_Alternativadresse FOREIGN KEY (PersonID)
    REFERENCES Person (PersonID)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
CONSTRAINT fk_Alternativadresse2 FOREIGN KEY (AdresseID)
    REFERENCES Adresse (AdresseID)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
GO

--
-- Create Table    : 'Emailadresse'   
-- EMAILID         :  
-- PersonID        :  (references Person.PersonID)
--
CREATE TABLE Emailadresse (
    EMAILID        BIGINT IDENTITY(1,1) NOT NULL,
    PersonID       BIGINT NOT NULL,
CONSTRAINT pk_Emailadresse PRIMARY KEY CLUSTERED (EMAILID),
CONSTRAINT fk_Emailadresse FOREIGN KEY (PersonID)
    REFERENCES Person (PersonID)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
GO

--
-- Create Table    : 'Noter'   
-- NoterID         :  
-- PersonID        :  (references Person.PersonID)
--
CREATE TABLE Noter (
    NoterID        BIGINT NOT NULL,
    PersonID       BIGINT NOT NULL,
CONSTRAINT pk_Noter PRIMARY KEY CLUSTERED (NoterID),
CONSTRAINT fk_Noter FOREIGN KEY (PersonID)
    REFERENCES Person (PersonID)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
GO

--
-- Permissions for: 'public'
--
GRANT ALL ON Adresse TO public
GO
GRANT ALL ON Person TO public
GO
GRANT ALL ON Telefon TO public
GO
GRANT ALL ON Alternativadresse TO public
GO
GRANT ALL ON Emailadresse TO public
GO
GRANT ALL ON Noter TO public
GO
